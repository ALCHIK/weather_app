{"ast":null,"code":"var _jsxFileName = \"/Users/alinachudaeva/WebHeroTestProject/weather_app/src/WeatherDisplay/WeatherDisplay.js\";\nimport React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DatePicker from 'react-datepicker';\nimport axios from 'axios';\nimport styles from '../App.module.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\n\nconst WeatherDisplay = ({\n  zip\n}) => {\n  const initData = {\n    weatherData: {},\n    error: '',\n    isLoading: true,\n    hasHistory: false\n  };\n  const [weatherData, setWeatherData] = useState(initData.weatherData);\n  const [error, setError] = useState(initData.error);\n  const [isLoading, setIsLoading] = useState(initData.isLoading);\n  const [startDate, setStartDate] = useState(new Date());\n  const [hasHistory, setHistory] = useState(initData.hasHistory);\n  const URL = \"/api/location/\" + zip + \"/\";\n\n  function FormRow() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: styles.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"item\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: styles.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, \"item\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: styles.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, \"item\")));\n  }\n\n  const onClickDateHandler = date => {\n    setStartDate(date);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    axios(URL + year + \"/\" + month + \"/\" + day + \"/\", {\n      method: 'GET'\n    }).then(response => {\n      console.log(response.data);\n      setWeatherData({\n        consolidated_weather: response.data\n      });\n      setIsLoading(false);\n      setHistory(true);\n    }).catch(err => {\n      console.log(err);\n      setError(err);\n    });\n  };\n\n  useEffect(() => {\n    axios(URL, {\n      method: 'GET'\n    }).then(response => {\n      console.log(response.data);\n      setWeatherData(response.data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setError(err);\n    });\n  }, []);\n  useEffect(() => {\n    console.log('update');\n  });\n  useEffect(() => {\n    return () => {\n      console.log('will unmount');\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, \"Displaying some Weather! \", zip), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }\n  }) : !isLoading && error ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 69\n    }\n  }, error) : /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 112\n    }\n  }, weatherData.title ? weatherData.title : 'History', /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDate,\n    onChange: date => onClickDateHandler(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  })), !hasHistory ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, weatherData.consolidated_weather.map(item => /*#__PURE__*/React.createElement(Grid, {\n    key: item.id,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, item.applicable_date), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://www.metaweather.com/static/img/weather/png/64/\" + item.weather_state_abbr + \".png\",\n    alt: item.weather_state_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"High: \", item.max_temp.toFixed(), \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Low: \", item.min_temp.toFixed(), \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Wind Speed: \", item.wind_speed.toFixed(), \" mi/hr\")))) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, weatherData.consolidated_weather.map(item => /*#__PURE__*/React.createElement(Grid, {\n    key: item.id,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://www.metaweather.com/static/img/weather/png/64/\" + item.weather_state_abbr + \".png\",\n    alt: item.weather_state_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, item.max_temp.toFixed(), \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, item.min_temp.toFixed(), \"\\xB0\")))))));\n  /*return (\n    <div>\n  <h1>Displaying some Weather! {zip}</h1>\n  <div>{ isLoading ? <CircularProgress /> : <div><h1>\n  {weatherData.title}\n  </h1>\n  { weatherData.consolidated_weather.map(item => (\n    <span>\n        <img src={\"https://www.metaweather.com/static/img/weather/png/64/\"+item.weather_state_abbr+\".png\"} alt={item.weather_state_name} />\n        <p>Current: {item.the_temp}°</p>\n    <p>High: {item.max_temp}°</p>\n    <p>Low: {item.min_temp}°</p>\n    <p>Wind Speed: {item.wind_speed} mi/hr</p></span>\n  ))}\n     <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n  </div>\n     }</div>\n  </div>\n  );*/\n};\n\nWeatherDisplay.propTypes = {\n  zip: PropTypes.oneOfType([//PropTypes.string,\n  PropTypes.array, PropTypes.number])\n};\nexport { WeatherDisplay };","map":{"version":3,"sources":["/Users/alinachudaeva/WebHeroTestProject/weather_app/src/WeatherDisplay/WeatherDisplay.js"],"names":["React","useState","useEffect","CircularProgress","DatePicker","axios","styles","Grid","Paper","PropTypes","WeatherDisplay","zip","initData","weatherData","error","isLoading","hasHistory","setWeatherData","setError","setIsLoading","startDate","setStartDate","Date","setHistory","URL","FormRow","paper","onClickDateHandler","date","year","getFullYear","month","getMonth","day","getDate","method","then","response","console","log","data","consolidated_weather","catch","err","title","map","item","id","applicable_date","weather_state_abbr","weather_state_name","max_temp","toFixed","min_temp","wind_speed","propTypes","oneOfType","array","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DatePicker from 'react-datepicker';\nimport axios from 'axios';\nimport  styles from '../App.module.css';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport PropTypes from 'prop-types';\n\n\nconst WeatherDisplay = ({zip}) => {\n    const initData = {\n        weatherData:{},\n        error: '',\n        isLoading: true,\n        hasHistory: false,\n    }\n\n    const [weatherData, setWeatherData] = useState(initData.weatherData);\n    const [error, setError] = useState(initData.error);\n    const [isLoading, setIsLoading] = useState(initData.isLoading);\n    const [startDate, setStartDate] = useState(new Date());\n    const [hasHistory, setHistory] = useState(initData.hasHistory);\n\n    const URL = \"/api/location/\"+zip+\"/\";\n\n    function FormRow() {\n        return (\n          <React.Fragment>\n            <Grid item xs={4}>\n              <Paper className={styles.paper}>item</Paper>\n            </Grid>\n            <Grid item xs={4}>\n              <Paper className={styles.paper}>item</Paper>\n            </Grid>\n            <Grid item xs={4}>\n              <Paper className={styles.paper}>item</Paper>\n            </Grid>\n          </React.Fragment>\n        );\n      }\n\n    const onClickDateHandler = (date) => {\n        setStartDate(date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n\n        axios(URL+year+\"/\"+month+\"/\"+day+\"/\", {\n            method: 'GET',\n          }).then(response => {\n              console.log(response.data)\n              setWeatherData({consolidated_weather: response.data});\n              setIsLoading(false);\n              setHistory(true);\n          }).catch((err)=>{\n              console.log(err)\n              setError(err)\n            });\n        \n    }\n\n    useEffect(() => {\n        axios(URL, {\n            method: 'GET',\n          }).then(response => {\n              console.log(response.data)\n              setWeatherData(response.data);\n              setIsLoading(false);\n          }).catch((err)=>{\n              console.log(err)\n              setError(err)\n            });\n    }, []);\n\n    useEffect(() => { \n        console.log('update')\n    });\n\n    useEffect(() => {\n        return () => {\n          console.log('will unmount');\n        }\n      }, []);\n\n    return (\n        <div>\n    <h1>Displaying some Weather! {zip}</h1>\n    <div>{ isLoading ? <CircularProgress /> : !isLoading && error ? <span>{error}</span> :  <Grid item lg={12}><h1>\n      {weatherData.title ? weatherData.title : 'History'}\n      <DatePicker selected={startDate} onChange={date => onClickDateHandler(date)} />\n    </h1>\n    { !hasHistory ? <Grid container justify=\"center\" direction=\"row\" spacing={2}>\n    { weatherData.consolidated_weather.map(item => (\n        <Grid key={item.id} item>\n            <p>{item.applicable_date }</p>\n            <img src={\"https://www.metaweather.com/static/img/weather/png/64/\"+item.weather_state_abbr+\".png\"} alt={item.weather_state_name} />\n            <p>High: {item.max_temp.toFixed()}°</p>\n            <p>Low: {item.min_temp.toFixed()}°</p>\n            <p>Wind Speed: {item.wind_speed.toFixed()} mi/hr</p>\n        </Grid>\n        ))\n    }\n    </Grid> : <Grid container direction=\"row\">\n    { weatherData.consolidated_weather.map(item =>\n    <Grid key={item.id} item>\n                    <img src={\"https://www.metaweather.com/static/img/weather/png/64/\"+item.weather_state_abbr+\".png\"} alt={item.weather_state_name} />\n            <p>{item.max_temp.toFixed()}°</p>\n            <p>{item.min_temp.toFixed()}°</p>\n                    \n                \n                </Grid>\n                \n                )}\n                </Grid>}\n    </Grid>\n    \n    }</div>\n    </div>\n    );\n      /*return (\n        <div>\n    <h1>Displaying some Weather! {zip}</h1>\n    <div>{ isLoading ? <CircularProgress /> : <div><h1>\n      {weatherData.title}\n    </h1>\n    { weatherData.consolidated_weather.map(item => (\n        <span>\n            <img src={\"https://www.metaweather.com/static/img/weather/png/64/\"+item.weather_state_abbr+\".png\"} alt={item.weather_state_name} />\n            <p>Current: {item.the_temp}°</p>\n        <p>High: {item.max_temp}°</p>\n        <p>Low: {item.min_temp}°</p>\n        <p>Wind Speed: {item.wind_speed} mi/hr</p></span>\n    ))}\n    \n    <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n    </div>\n    \n    }</div>\n    </div>\n      );*/\n}\n\nWeatherDisplay.propTypes = {\n\n    zip: PropTypes.oneOfType([\n        //PropTypes.string,\n        PropTypes.array,\n        PropTypes.number\n      ])\n};\n\nexport  { WeatherDisplay };"]},"metadata":{},"sourceType":"module"}