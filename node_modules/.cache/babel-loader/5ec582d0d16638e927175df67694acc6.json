{"ast":null,"code":"var _jsxFileName = \"/Users/alinachudaeva/WebHeroTestProject/weather_app/src/WeatherDisplay/WeatherDisplay.js\";\nimport React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst WeatherDisplay = ({\n  zip\n}) => {\n  const initData = {\n    weatherData: {},\n    error: '',\n    isLoading: true\n  };\n  const [weatherData, setWeatherData] = useState(initData.weatherData);\n  const [error, setError] = useState(initData.error);\n  const [isLoading, setIsLoading] = useState(initData.isLoading);\n  const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" + zip + \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n  useEffect(() => {\n    fetch(URL).then(res => res.json()).then(json => {\n      setWeatherData(json);\n      setIsLoading(false);\n    }).catch(err => {\n      setError(err);\n    });\n  }, []);\n  useEffect(() => {\n    console.log('update');\n  });\n  useEffect(() => {\n    return () => {\n      console.log('will unmount');\n    };\n  }, []);\n  const weather = weatherData.weather[0];\n  const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Displaying some Weather! \", zip), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 55\n    }\n  }, weather.main, \" in \", weatherData.name, /*#__PURE__*/React.createElement(\"img\", {\n    src: iconUrl,\n    alt: weatherData.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }))));\n};\n\nexport { WeatherDisplay };","map":{"version":3,"sources":["/Users/alinachudaeva/WebHeroTestProject/weather_app/src/WeatherDisplay/WeatherDisplay.js"],"names":["React","useState","useEffect","CircularProgress","WeatherDisplay","zip","initData","weatherData","error","isLoading","setWeatherData","setError","setIsLoading","URL","fetch","then","res","json","catch","err","console","log","weather","iconUrl","icon","main","name","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAC9B,QAAMC,QAAQ,GAAG;AACbC,IAAAA,WAAW,EAAE,EADA;AAEbC,IAAAA,KAAK,EAAE,EAFM;AAGbC,IAAAA,SAAS,EAAE;AAHE,GAAjB;AAMA,QAAM,CAACF,WAAD,EAAcG,cAAd,IAAgCT,QAAQ,CAACK,QAAQ,CAACC,WAAV,CAA9C;AACA,QAAM,CAACC,KAAD,EAAQG,QAAR,IAAoBV,QAAQ,CAACK,QAAQ,CAACE,KAAV,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYG,YAAZ,IAA4BX,QAAQ,CAACK,QAAQ,CAACG,SAAV,CAA1C;AAEA,QAAMI,GAAG,GAAG,sDACVR,GADU,GAEV,wDAFF;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EAAmCF,IAAnC,CAAwCE,IAAI,IAAI;AAC5CP,MAAAA,cAAc,CAACO,IAAD,CAAd;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHH,EAGKM,KAHL,CAGWC,GAAG,IAAI;AACdR,MAAAA,QAAQ,CAACQ,GAAD,CAAR;AACD,KALH;AAMH,GAPQ,EAON,EAPM,CAAT;AASAjB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GAFQ,CAAT;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACXkB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAFD;AAGD,GAJM,EAIJ,EAJI,CAAT;AAOA,QAAMC,OAAO,GAAGf,WAAW,CAACe,OAAZ,CAAoB,CAApB,CAAhB;AACA,QAAMC,OAAO,GAAG,qCAAqCD,OAAO,CAACE,IAA7C,GAAoD,MAApE;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA8BnB,GAA9B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,SAAS,gBAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC/Ca,OAAO,CAACG,IADuC,UAC7BlB,WAAW,CAACmB,IADiB,eAEhD;AAAK,IAAA,GAAG,EAAEH,OAAV;AAAmB,IAAA,GAAG,EAAEhB,WAAW,CAACoB,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFgD,CAA1C,CAFJ,CADJ;AAUH,CAhDD;;AAkDA,SAAUvB,cAAV","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst WeatherDisplay = ({zip}) => {\n    const initData = {\n        weatherData: {},\n        error: '',\n        isLoading: true\n    }\n\n    const [weatherData, setWeatherData] = useState(initData.weatherData);\n    const [error, setError] = useState(initData.error);\n    const [isLoading, setIsLoading] = useState(initData.isLoading);\n\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n      zip +\n      \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n    \n    useEffect(() => {\n        fetch(URL).then(res => res.json()).then(json => {\n            setWeatherData(json);\n            setIsLoading(false);\n          }).catch(err => {\n            setError(err)\n          })\n    }, []);\n\n    useEffect(() => { \n        console.log('update')\n    });\n\n    useEffect(() => {\n        return () => {\n          console.log('will unmount');\n        }\n      }, []);\n\n\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n\n    return (\n        <div>\n            <h1>Displaying some Weather! {zip}</h1>\n            <div>{ isLoading ? <CircularProgress /> : <h1>\n      {weather.main} in {weatherData.name}\n      <img src={iconUrl} alt={weatherData.description} />\n    </h1> }\n            </div>\n         </div>\n      );\n}\n\nexport  { WeatherDisplay };"]},"metadata":{},"sourceType":"module"}