{"ast":null,"code":"var _jsxFileName = \"/Users/alinachudaeva/WebHeroTestProject/weather_app/src/WeatherDisplay/WeatherDisplay.js\";\nimport React, { useState, useEffect } from 'react'; //import CircularProgress from '@material-ui/core/CircularProgress';\n\nconst WeatherDisplay = ({\n  zip\n}) => {\n  const initData = {\n    weatherData: {},\n    error: '',\n    isLoading: true\n  };\n  const [weatherData, setWeatherData] = useState(initData.weatherData);\n  const [error, setError] = useState(initData.error);\n  const [isLoading, setIsLoading] = useState(initData.isLoading);\n  const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" + zip + \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n  useEffect(() => {\n    fetch(URL).then(res => res.json()).then(json => {\n      setWeatherData(json);\n      setIsLoading(false);\n    }).catch(err => {\n      setError(err);\n    });\n  }, []);\n  useEffect(() => {\n    console.log('update');\n  });\n  useEffect(() => {\n    return () => {\n      console.log('will unmount');\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"Displaying some Weather! \", zip), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, isLoading ? 'loading...' : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 44\n    }\n  }, weatherData.name, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://openweathermap.org/img/w/\" + weatherData.weather[0].icon + \".png\",\n    alt: weatherData.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"Current: \", weatherData.main.temp, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"High: \", weatherData.main.temp_max, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"Low: \", weatherData.main.temp_min, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"Wind Speed: \", weatherData.wind.speed, \" mi/hr\"))));\n};\n\nexport { WeatherDisplay };","map":{"version":3,"sources":["/Users/alinachudaeva/WebHeroTestProject/weather_app/src/WeatherDisplay/WeatherDisplay.js"],"names":["React","useState","useEffect","WeatherDisplay","zip","initData","weatherData","error","isLoading","setWeatherData","setError","setIsLoading","URL","fetch","then","res","json","catch","err","console","log","name","weather","icon","description","main","temp","temp_max","temp_min","wind","speed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAC9B,QAAMC,QAAQ,GAAG;AACbC,IAAAA,WAAW,EAAE,EADA;AAEbC,IAAAA,KAAK,EAAE,EAFM;AAGbC,IAAAA,SAAS,EAAE;AAHE,GAAjB;AAMA,QAAM,CAACF,WAAD,EAAcG,cAAd,IAAgCR,QAAQ,CAACI,QAAQ,CAACC,WAAV,CAA9C;AACA,QAAM,CAACC,KAAD,EAAQG,QAAR,IAAoBT,QAAQ,CAACI,QAAQ,CAACE,KAAV,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYG,YAAZ,IAA4BV,QAAQ,CAACI,QAAQ,CAACG,SAAV,CAA1C;AAEA,QAAMI,GAAG,GAAG,sDACVR,GADU,GAEV,wDAFF;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EAAmCF,IAAnC,CAAwCE,IAAI,IAAI;AAC5CP,MAAAA,cAAc,CAACO,IAAD,CAAd;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHH,EAGKM,KAHL,CAGWC,GAAG,IAAI;AACdR,MAAAA,QAAQ,CAACQ,GAAD,CAAR;AACD,KALH;AAMH,GAPQ,EAON,EAPM,CAAT;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GAFQ,CAAT;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACXiB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAFD;AAGD,GAJM,EAIJ,EAJI,CAAT;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA8BhB,GAA9B,CADI,eAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,SAAS,GAAG,YAAH,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACpCF,WAAW,CAACe,IADwB,eAErC;AAAK,IAAA,GAAG,EAAE,qCAAqCf,WAAW,CAACgB,OAAZ,CAAoB,CAApB,EAAuBC,IAA5D,GAAmE,MAA7E;AAAqF,IAAA,GAAG,EAAEjB,WAAW,CAACkB,WAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFqC,CAAL,eAIlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAalB,WAAW,CAACmB,IAAZ,CAAiBC,IAA9B,SAJkC,eAKlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUpB,WAAW,CAACmB,IAAZ,CAAiBE,QAA3B,SALkC,eAMlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASrB,WAAW,CAACmB,IAAZ,CAAiBG,QAA1B,SANkC,eAOlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBtB,WAAW,CAACuB,IAAZ,CAAiBC,KAAjC,WAPkC,CAAlC,CAFI,CADJ;AAgBH,CAlDD;;AAoDA,SAAU3B,cAAV","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import CircularProgress from '@material-ui/core/CircularProgress';\n\nconst WeatherDisplay = ({zip}) => {\n    const initData = {\n        weatherData: {},\n        error: '',\n        isLoading: true\n    }\n\n    const [weatherData, setWeatherData] = useState(initData.weatherData);\n    const [error, setError] = useState(initData.error);\n    const [isLoading, setIsLoading] = useState(initData.isLoading);\n\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n      zip +\n      \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n    \n    useEffect(() => {\n        fetch(URL).then(res => res.json()).then(json => {\n            setWeatherData(json);\n            setIsLoading(false);\n          }).catch(err => {\n            setError(err)\n          })\n    }, []);\n\n    useEffect(() => { \n        console.log('update')\n    });\n\n    useEffect(() => {\n        return () => {\n          console.log('will unmount');\n        }\n      }, []);\n\n    return (\n        <div>\n    <h1>Displaying some Weather! {zip}</h1>\n    <div>{ isLoading ? 'loading...' : <div><h1>\n      {weatherData.name}\n      <img src={\"http://openweathermap.org/img/w/\" + weatherData.weather[0].icon + \".png\"} alt={weatherData.description} />\n    </h1>\n    <p>Current: {weatherData.main.temp}°</p>\n    <p>High: {weatherData.main.temp_max}°</p>\n    <p>Low: {weatherData.main.temp_min}°</p>\n    <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\n    </div>\n    \n    }</div>\n    </div>\n      );\n}\n\nexport  { WeatherDisplay };"]},"metadata":{},"sourceType":"module"}