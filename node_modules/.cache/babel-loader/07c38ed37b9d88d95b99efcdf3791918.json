{"ast":null,"code":"var _jsxFileName = \"/Users/alinachudaeva/WebHeroTestProject/weather_app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './App.module.css';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { WeatherDisplay } from './WeatherDisplay/WeatherDisplay';\nconst PLACES = [{\n  name: \"Palo Alto\",\n  zip: \"94303\",\n  id: 1\n}, {\n  name: \"San Jose\",\n  zip: \"94088\",\n  id: 2\n}, {\n  name: \"Santa Cruz\",\n  zip: \"95062\",\n  id: 3\n}, {\n  name: \"Honolulu\",\n  zip: \"96803\",\n  id: 4\n}];\n\nconst App = () => {\n  const initData = {\n    activePlace: 0,\n    weatherData: null\n  };\n  const [activePlace, setActivePlace] = useState(initData.activePlace);\n  useEffect(() => {\n    console.log('update');\n  });\n  useEffect(() => {\n    console.log('did mount');\n  }, []);\n  useEffect(() => {\n    return () => {\n      console.log('will unmount');\n    };\n  }, []);\n\n  const onCityClickHandler = id => {\n    setActivePlace(id);\n    console.log(activePlace);\n  };\n  /*return (\n    <div >\n      <WeatherDisplay  key={activePlace}\n          zip={PLACES[activePlace].zip} />\n      {PLACES.map((place,index) => (\n      <button\n        key={index}\n        onClick={() => onCityClickHandler(index)}\n      >\n          {place.name}\n      </button>\n    ))}\n  </div>\n  \n  );*/\n\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Select a city\"), /*#__PURE__*/React.createElement(Nav, {\n    bsStyle: \"pills\",\n    stacked: true,\n    activeKey: activePlace,\n    onSelect: index => {\n      this.setState({\n        activePlace: index\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, PLACES.map((place, index) => /*#__PURE__*/React.createElement(NavItem, {\n    key: index,\n    eventKey: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, place.name)))), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WeatherDisplay, {\n    key: activePlace,\n    zip: PLACES[activePlace].zip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/alinachudaeva/WebHeroTestProject/weather_app/src/App.js"],"names":["React","useState","useEffect","styles","Paper","Grid","WeatherDisplay","PLACES","name","zip","id","App","initData","activePlace","weatherData","setActivePlace","console","log","onCityClickHandler","index","setState","map","place"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport  styles from './App.module.css';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport { WeatherDisplay } from './WeatherDisplay/WeatherDisplay';\n\nconst PLACES = [\n  { name: \"Palo Alto\", zip: \"94303\", id: 1 },\n  { name: \"San Jose\", zip: \"94088\", id: 2 },\n  { name: \"Santa Cruz\", zip: \"95062\", id: 3 },\n  { name: \"Honolulu\", zip: \"96803\", id: 4 }\n];\n\nconst App = () => {\n  const initData = {\n    activePlace: 0,\n    weatherData: null\n  };\n\n  const [activePlace , setActivePlace] = useState(initData.activePlace);\n\n  useEffect(() => { \n    console.log('update')\n  });\n\n  useEffect(() => { \n    console.log('did mount')\n  }, []);\n\n\nuseEffect(() => {\n    return () => {\n      console.log('will unmount');\n    }\n  }, []);\n\n\n  const onCityClickHandler = (id) => {\n    setActivePlace(id);\n    console.log(activePlace);\n  };\n\n\n  /*return (\n    <div >\n      <WeatherDisplay  key={activePlace}\n          zip={PLACES[activePlace].zip} />\n      {PLACES.map((place,index) => (\n      <button\n        key={index}\n        onClick={() => onCityClickHandler(index)}\n      >\n          {place.name}\n      </button>\n    ))}\n  </div>\n  \n);*/\nreturn (\n  <Grid>\n    <Paper>\n      <Col md={4} sm={4}>\n        <h3>Select a city</h3>\n        <Nav\n          bsStyle=\"pills\"\n          stacked\n          activeKey={activePlace}\n          onSelect={index => {\n            this.setState({ activePlace: index });\n          }}\n        >\n          {PLACES.map((place, index) => (\n            <NavItem key={index} eventKey={index}>{place.name}</NavItem>\n          ))}\n        </Nav>\n      </Col>\n      <Col md={8} sm={8}>\n        <WeatherDisplay key={activePlace} zip={PLACES[activePlace].zip} />\n      </Col>\n    </Paper>\n  </Grid>\n);\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}